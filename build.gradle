/**
 * Copyright (c) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group = 'com.oisp'

buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url "https://repository.cloudera.com/artifactory/cloudera-repos/" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://nexus.sclab.intel.com:8080/content/groups/public" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.google.guava:guava:18.0")
        classpath("com.palantir:jacoco-coverage:0.3.0")
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'project-report'

apply plugin: 'checkstyle'
apply plugin: 'pmd'

apply plugin: 'jacoco'
apply plugin: 'com.palantir.jacoco-coverage'
apply plugin: 'com.palantir.jacoco-full-report'

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoCoverage {
    reportThreshold  0.2, LINE
}

checkstyle {
    toolVersion = "6.1.1"
    configFile = rootProject.file('checkstyle/checkstyle.xml')
    sourceSets = [sourceSets.main]
}

pmd {
    toolVersion = "5.4.1"
    consoleOutput = true
    ruleSetConfig = resources.text.fromFile("checkstyle/pmdRuleSet.xml")
    sourceSets = [sourceSets.main]
}

mainClassName = "com.oisp.databackend.Application"
sourceCompatibility = 1.8
ext.cdhVersion = "cdh5.13.1"
ext.hbaseVersion = "1.2.0-$cdhVersion"
ext.hadoopVersion = "2.6.0-$cdhVersion"


jar {
    baseName 'databackend'
    manifest { 
        attributes "Main-Class": "$mainClassName"
    } 
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

repositories {
    mavenLocal()
    maven { url "https://repository.cloudera.com/artifactory/cloudera-repos/" }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://nexus.sclab.intel.com:8080/content/groups/public" }
    mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude group: "org.mortbay.jetty"
    compile.exclude group: "tomcat"
    compile.exclude module: "slf4j-log4j12"
    compile.exclude module: "org.apache.logging.log4j"
    compile.exclude group: "org.eclipse.jetty.websocket"
    compile.exclude group: "javax.servlet", module: "servlet-api"
    compile.exclude group: "ch.qos.logback"
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {exclude group: "org.apache.logging.log4j"}
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}")
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor', version: '2.9.8'
// https://mvnrepository.com/artifact/io.opentracing.contrib/opentracing-spring-web-autoconfigure
    compile group: 'io.opentracing.contrib', name: 'opentracing-spring-web-autoconfigure', version: '0.3.2'
    compile group: 'io.jaegertracing', name: 'jaeger-core', version: '0.31.0'
    compile group: 'io.jaegertracing', name: 'jaeger-thrift', version: '0.31.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: "${springBootVersion}"






    compile("org.apache.hbase:hbase:$hbaseVersion")
    compile("org.apache.hbase:hbase-client:$hbaseVersion")
    compile("org.apache.hbase:hbase-common:$hbaseVersion")

    compile("org.apache.hadoop:hadoop-common:$hadoopVersion")
    
    compile("com.cedarsoftware:json-io:3.1.2")
    compile "org.hamcrest:hamcrest-all:1.3"
    compile "com.btmatthews.hamcrest:hamcrest-matchers:1.0.1"

    compile("org.trustedanalytics:hadoop-utils:0.6.11")

    /*
     To find proper version of Kafka for Cloudera please use following link:
     http://www.cloudera.com/content/www/en-us/documentation/kafka/latest/topics/kafka_packaging.html
     jar file can be found here:
     https://repository.cloudera.com/artifactory/repo/org/apache/kafka/kafka-clients/
     */
    compile("org.apache.kafka:kafka_2.11:0.10.2-kafka-2.2.0") {
        exclude group: "org.apache.zookeeper", module: "zookeeper"
    }
    compile("org.apache.kafka:kafka-clients:0.10.2-kafka-2.2.0")
     /* check the required version in kafka_2.11:0.10.2-kafka-2.2.0 pom.xml
        https://repository.cloudera.com/cloudera/cloudera-repos/org/apache/kafka/kafka_2.11/0.10.2-kafka-2.2.0/ */
    compile("com.101tec:zkclient:0.10") {
        exclude group: "org.apache.zookeeper", module: "zookeeper"
    }

    compile("io.springfox:springfox-swagger2:2.9.2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")
    
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.testng:testng:6.8.21'
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-module-testng:1.6.2"
    testCompile "org.springframework:spring-test:5.0.4.RELEASE"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "com.btmatthews.hamcrest:hamcrest-matchers:1.0.1"

    pmd('net.sourceforge.pmd:pmd-core:5.4.1', 'net.sourceforge.pmd:pmd-java:5.4.1')
}
